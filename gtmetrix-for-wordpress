            if ( ! class_exists( 'Services_WTF_Test' ) ) {
                require_once 'lib/Services_WTF_Test.php';
            }
            $test = new Services_WTF_Test();
            $test->api_username( $valid['api_username'] );
            $test->api_password( $valid['api_key'] );
            $test->user_agent( GFW_USER_AGENT );
            $locations = $test->locations();

            if ( $test->error() ) {
                if ( ! get_settings_errors( 'gfw_options' ) ) {
                    add_settings_error( 'gfw_options', 'api_error', $test->error() );
                }
            } else {
                foreach ( $locations as $location ) {
                    $valid['locations'][$location['id']] = $location;
                }
                $valid['authorized'] = 1;
                if ( ! get_settings_errors( 'gfw_options' ) ) {
                    add_settings_error( 'gfw_options', 'settings_updated', 'Settings Saved. Please click on <a href="' . GFW_TESTS . '">Tests</a> to test your WordPress installation.', 'updated' );    
                }
            }
        }
        $options = get_option( 'gfw_options' );
        $valid['default_location'] = isset( $input['default_location'] ) ? $input['default_location'] : ( isset( $options['default_location'] ) ? $options['default_location'] : 1 );
        $valid['default_adblock'] = isset( $input['default_adblock'] ) ? $input['default_adblock'] : ( isset( $options['default_adblock'] ) ? $options['default_adblock'] : 0 );
        $valid['dashboard_widget'] = isset( $input['dashboard_widget'] ) ? $input['dashboard_widget'] : ( isset( $options['dashboard_widget'] ) ? $options['dashboard_widget'] : 1 );
        $valid['toolbar_link'] = isset( $input['toolbar_link'] ) ? $input['toolbar_link'] : ( isset( $options['toolbar_link'] ) ? $options['toolbar_link'] : 1 );
        $valid['notifications_email'] = isset( $input['notifications_email'] ) ? $input['notifications_email'] : ( isset( $options['notifications_email'] ) ? $options['notifications_email'] : 'api_username' );

        $valid['widget_pagespeed'] = isset( $input['widget_pagespeed'] ) ? $input['widget_pagespeed'] : $options['widget_pagespeed'];
        $valid['widget_yslow'] = isset( $input['widget_yslow'] ) ? $input['widget_yslow'] : $options['widget_yslow'];
        $valid['widget_scores'] = isset( $input['widget_scores'] ) ? $input['widget_scores'] : $options['widget_scores'];
        $valid['widget_link'] = isset( $input['widget_link'] ) ? $input['widget_link'] : $options['widget_link'];
        $valid['widget_css'] = isset( $input['widget_css'] ) ? $input['widget_css'] : $options['widget_css'];
        $valid['front_url'] = isset( $input['front_url'] ) ? $input['front_url'] : $options['front_url'];
        return $valid;
    }

    public function admin_styles() {
        wp_enqueue_style( 'gfw-style', GFW_URL . 'gtmetrix-for-wordpress.css', array(), GFW_VERSION );
    }

    public function register_post_types() {

        register_post_type( 'gfw_report', array(
            'label' => 'GFW Reports',
            'public' => false,
            'supports' => array( false ),
            'rewrite' => false,
            'can_export' => false
        ) );

        register_post_type( 'gfw_event', array(
            'label' => 'GFW Events',
            'public' => false,
            'supports' => array( false ),
            'rewrite' => false,
            'can_export' => false
        ) );
    }

    public function save_report( $data, $event_id = 0 ) {

        $post_id = wp_insert_post( array(
            'post_type' => 'gfw_report',
            'post_status' => 'publish',
            'post_author' => 1
                ) );

        update_post_meta( $post_id, 'gfw_url', $this->append_http( $data['gfw_url'] ) );
        update_post_meta( $post_id, 'gfw_label', $data['gfw_label'] );
        update_post_meta( $post_id, 'gfw_location', $data['gfw_location'] );
        update_post_meta( $post_id, 'gfw_adblock', isset( $data['gfw_adblock'] ) ? $data['gfw_adblock'] : 0 );
        update_post_meta( $post_id, 'gfw_video', isset( $data['gfw_video'] ) ? $data['gfw_video'] : 0 );
        update_post_meta( $post_id, 'gfw_event_id', $event_id );

        if ( ! isset( $data['error'] ) ) {
            update_post_meta( $post_id, 'gtmetrix_test_id', $data['test_id'] );
            update_post_meta( $post_id, 'page_load_time', $data['page_load_time'] );
            update_post_meta( $post_id, 'fully_loaded_time', $data['fully_loaded_time'] );
            update_post_meta( $post_id, 'html_bytes', $data['html_bytes'] );
            update_post_meta( $post_id, 'page_elements', $data['page_elements'] );
            update_post_meta( $post_id, 'report_url', $data['report_url'] );
            update_post_meta( $post_id, 'html_load_time', $data['html_load_time'] );
            update_post_meta( $post_id, 'page_bytes', $data['page_bytes'] );
            update_post_meta( $post_id, 'pagespeed_score', $data['pagespeed_score'] );
            update_post_meta( $post_id, 'yslow_score', $data['yslow_score'] );
        } else {
            update_post_meta( $post_id, 'gtmetrix_test_id', 0 );
            update_post_meta( $post_id, 'gtmetrix_error', $data['error'] );
        }
        return $post_id;
    }

    protected function run_test( $parameters ) {

        $api = $this->api();
        $response = array();
        delete_transient( 'credit_status' );

        $test_id = $api->test( array(
            'url' => $this->append_http( $parameters['gfw_url'] ),
            'location' => $parameters['gfw_location'],
            'x-metrix-adblock' => isset( $parameters['gfw_adblock'] ) ? $parameters['gfw_adblock'] : 0,
            'x-metrix-video' => isset( $parameters['gfw_video'] ) ? $parameters['gfw_video'] : 0,
                ) );

        if ( $api->error() ) {
            $response['error'] = $api->error();
            return $response;
        }

        $api->get_results();

        if ( $api->error() ) {
            $response['error'] = $api->error();
            return $response;
        }

        if ( $api->completed() ) {
            $response['test_id'] = $test_id;
            return array_merge( $response, $api->results() );
        }
    }

    public function save_report_callback() {
        if ( check_ajax_referer( 'gfwnonce', 'security' ) ) {
            $fields = array();
            parse_str( $_POST['fields'], $fields );
            $report = $this->run_test( $fields );
            if ( isset( $report['error'] ) ) {
                $response = json_encode( array( 'error' => $this->translate_message( $report['error'] ) ) );
            } else {
                $this->save_report( array_merge( $fields, $report ) );
                set_transient( 'admin_notice', 'Test complete' );
                $response = json_encode( array(
                    'screenshot' => $report['report_url'] . '/screenshot.jpg'
                        ) );
            }
            echo $response;
        }
        die();
    }

    public function delete_report_callback() {
        if ( check_ajax_referer( 'gfwnonce', 'security' ) ) {
            $status = "ok";
            $report_id = ! empty( $_POST['entity_id'] ) ? absint( $_POST['entity_id'] ) : 0;
            if ( $report_id ) {
                $deleted = wp_delete_post( $report_id );
                if( is_object( $deleted ) ) {
                    $response = json_encode( array(
                        'message' => "Report deleted"
                    ) );
                } else {
                    $response = json_encode( array(
                        'error' => "There was an error deleting this report. Please try again later"
                    ) );
                }
                echo $response;
            }
        }
        die();
    }

    public function delete_event_callback() {
        if ( check_ajax_referer( 'gfwnonce', 'security' ) ) {
            $event_id = ! empty( $_POST['entity_id'] ) ? absint( $_POST['entity_id'] ) : 0;
            if ( $event_id ) {
                $args = array(
                    'post_type' => 'gfw_report',
                    'meta_key' => 'gfw_event_id',
                    'meta_value' => $event_id,
                    'posts_per_page' => -1
                );

                $query = new WP_Query( $args );

                while ( $query->have_posts() ) {
                    $query->next_post();
                    wp_delete_post( $query->post->ID );
                }
                $deleted = wp_delete_post( $event_id );
                if( is_object( $deleted ) ) {
                    $response = json_encode( array(
                        'message' => "Event deleted"
                    ) );
                } else {
                    $response = json_encode( array(
                        'error' => "There was an error deleting this report. Please try again later"
                    ) );
                }
                echo $response;
            }
        }
        die();
    }

    public function pause_event_callback() {
        if ( check_ajax_referer( 'gfwnonce', 'security' ) ) {
            $event_id = ! empty( $_POST['entity_id'] ) ? absint( $_POST['entity_id'] ) : 0;
            if ( $event_id ) {
                $event_to_pause = get_post( $event_id );
                if( !$event_to_pause ) {
                    $response = json_encode( array(
                        'error' => "Invalid Event"
                    ) );
                    echo $response;
                } else {
                    $gfw_status = get_post_meta( $event_id, 'gfw_status', true );
                    if ( 1 == $gfw_status ) {
                        update_post_meta( $event_id, 'gfw_status', 2 );
                        $response = json_encode( array(
                            'message' => "Event paused"
                        ) );
                    } else {
                        update_post_meta( $event_id, 'gfw_status', 1 );
                        update_post_meta( $event_id, 'gfw_event_error', 0 );
                        $response = json_encode( array(
                            'message' => "Event reactivated"
                        ) );
                    }
                }
                echo $response;
            } else {
                $response = json_encode( array(
                    'error' => "Invalid Event"
                ) );
                echo $response;
            }
        } else {
            $response = json_encode( array(
                'error' => "Invalid Request"
            ) );
            echo $response;
        }
        die();
    }

    public function autocomplete_callback() {
        $args['s'] = esc_html( wp_unslash( $_GET['term'] ) );
        $args['pagenum'] = ! empty( $_POST['page'] ) ? absint( $_POST['page'] ) : 1;
        require(ABSPATH . WPINC . '/class-wp-editor.php');
        $results = _WP_Editors::wp_link_query( $args );
        echo json_encode( $results ) . "\n";
        die();
    }

    public function expand_report_callback() {

        $post = get_post( $_POST['id'] );

        if ( 'gfw_report' == $post->post_type ) {
            $report_id = $post->ID;
        } else {

            $args = array(
                'post_type' => 'gfw_report',
                'posts_per_page' => 1,
                'orderby' => 'post_date',
                'order' => 'DESC',
                'meta_query' => array(
                    array(
                        'key' => 'gfw_event_id',
                        'value' => $post->ID
                    ),
                    array(
                        'key' => 'gtmetrix_test_id',
                        'value' => 0,
                        'compare' => '!='
                    )
                ),
            );
            $query = new WP_Query( $args );
            $report_id = ( $query->post_count ? $query->post->ID : 0 );
        }

        echo '<div class="gfw-expansion">';
        echo '<div class="gfw-expansion-right">';
        if ( $report_id ) {
            $report = get_post( $report_id );
            $custom_fields = get_post_custom( $report->ID );

            $loaded_time = $custom_fields['page_load_time'][0];
            $loaded_time_text = "Onload time";
            if (isset($custom_fields['fully_loaded_time'][0])) {
                $loaded_time = $custom_fields['fully_loaded_time'][0];
                $loaded_time_text = "Fully loaded time";
            }

            $options = get_option( 'gfw_options' );
            $expired = ( $this->gtmetrix_file_exists( $custom_fields['report_url'][0] . '/screenshot.jpg' ) ? false : true );
            ?>
            <div class="gfw-meta">
                <div><b>URL:</b> <?php echo esc_html( $custom_fields['gfw_url'][0] ); ?></div>
                <div><b>Test server region:</b> <?php echo esc_html( $options['locations'][$custom_fields['gfw_location'][0]]['name'] ); ?></div>
                <div style="text-align: center"><b>Adblock:</b> <?php echo ( $custom_fields['gfw_adblock'][0] ? 'On' : 'Off' ); ?></div>
                <div style="text-align: right"><b>Latest successful test:</b> <?php echo esc_html( date( get_option( 'date_format' ) . ' ' . get_option( 'time_format' ), strtotime( $report->post_date ) ) ); ?></div>
            </div>
            <div>
                <table>
                    <tr>
                        <th>PageSpeed score:</th>
                        <td><?php echo esc_html( $custom_fields['pagespeed_score'][0] ); ?></td>
                        <th>YSlow score:</th>
                        <td><?php echo esc_html( $custom_fields['yslow_score'][0] ); ?></td>
                    </tr>
                    <tr>
                        <th><?php echo esc_html( $loaded_time_text ); ?>:</th>
                        <td><?php echo esc_html( number_format( $loaded_time / 1000, 2 ) ); ?> seconds</td>
                        <th>Total HTML size:</th>
                        <td><?php echo esc_html( size_format( $custom_fields['html_bytes'][0], 1 ) ); ?></td>
                    </tr>
                    <tr>
                        <th>Requests:</th>
                        <td><?php echo esc_html( $custom_fields['page_elements'][0] ); ?></td>
                        <th>HTML load time:</th>
                        <td><?php echo esc_html( number_format( $custom_fields['html_load_time'][0] / 1000, 2 ) ); ?> seconds</td>
                    </tr>
                    <tr>
                        <th>Total page size:</th>
                        <td><?php echo esc_html( size_format( $custom_fields['page_bytes'][0], 2 ) ); ?></td>
                        <th>&nbsp;</th>
                        <td>&nbsp;</td>
                    </tr>
                </table>
            </div>
            <?php
            if ( 'gfw_event' == $post->post_type ) {
                echo '<div class="graphs">';
                echo '<div><a href="' . esc_html( wp_unslash( $_POST['id'] ) ) . '" class="gfw-open-graph gfw-scores-graph" id="gfw-scores-graph">PageSpeed and YSlow scores graph</a></div>';
                echo '<div><a href="' . esc_html( wp_unslash( $_POST['id'] ) ) . '" class="gfw-open-graph gfw-times-graph" id="gfw-times-graph">Page load times graph</a></div>';
                echo '<div><a href="' . esc_html( wp_unslash( $_POST['id'] ) ) . '" class="gfw-open-graph gfw-sizes-graph" id="gfw-sizes-graph">Page sizes graph</a></div>';
                echo '</div>';
            }
            echo '<div class="actions">';
            if ( 'gfw_report' == $post->post_type ) {
                echo '<div><a href="' . esc_html( GFW_SCHEDULE ) . '&report_id=' . esc_html( $report->ID ) . '" class="gfw-schedule-icon-large">Schedule tests</a></div>';
            }
            if ( ! $expired ) {
                echo '<div><a href="' . esc_html( $custom_fields['report_url'][0] ) . '" target="_blank" class="gfw-report-icon">Detailed report</a></div>';
                echo '<div><a href="' . esc_html( $custom_fields['report_url'][0] ) . '/pdf?full=1" class="gfw-pdf-icon">Download PDF</a></div>';
                if ( isset( $custom_fields['gfw_video'][0] ) && $custom_fields['gfw_video'][0] ) {
                    echo '<div><a href="' . esc_html( $custom_fields['report_url'][0] ) . '/video" class="gfw-video-icon">Video</a></div>';
                }
            }
            echo '</div>';
            echo '</div>';
            echo '<div class="gfw-expansion-left">';
            if ( ! $expired ) {
                echo '<img src="' . esc_html( $custom_fields['report_url'][0] ) . '/screenshot.jpg' . '" />';
            }
        } else {
            echo '<p>There are currently no successful reports in the database for this event.</p>';
        }
        echo '</div>';
        echo '</div>';
        die();
    }

    public function report_graph_callback() {

        $graph = esc_html( wp_unslash( $_GET['graph'] ) );

        $args = array(
            'post_type' => 'gfw_report',
            'numberposts' => 6,
            'orderby' => 'post_date',
            'order' => 'DESC',
            'meta_query' => array(
                array(
                    'key' => 'gfw_event_id',
                    'value' => $_GET['id']
                ),
                array(
                    'key' => 'gtmetrix_test_id',
                    'value' => 0,
                    'compare' => '!='
                )
            ),
        );
        $query = new WP_Query( $args );
        while ( $query->have_posts() ) {
            $query->next_post();
            $custom_fields = get_post_custom( $query->post->ID );
            $milliseconds = strtotime( $query->post->post_date ) * 1000;
            $pagespeed_scores[] = array( $milliseconds, $custom_fields['pagespeed_score'][0] );
            $yslow_scores[] = array( $milliseconds, $custom_fields['yslow_score'][0] );
            $page_load_times[] = array( $milliseconds, number_format( $custom_fields['page_load_time'][0] / 1000, 1 ) );
            $html_load_times[] = array( $milliseconds, number_format( $custom_fields['html_load_time'][0] / 1000, 1 ) );
            $html_bytes[] = array( $milliseconds, $custom_fields['html_bytes'][0] / 1024 );
            $page_bytes[] = array( $milliseconds, $custom_fields['page_bytes'][0] / 1024 );
        }
        $graph_data = array( );
        switch ( $graph ) {
            case 'gfw-scores-graph':
                $graph_data[] = array( 'label' => 'Pagespeed Score', 'data' => $pagespeed_scores );
                $graph_data[] = array( 'label' => 'YSlow Score', 'data' => $yslow_scores );
                break;
            case 'gfw-times-graph':
                $graph_data[] = array( 'label' => 'Page Load Time', 'data' => $page_load_times );
                $graph_data[] = array( 'label' => 'HTML Load Time', 'data' => $html_load_times );
                break;
            case 'gfw-sizes-graph':
                $graph_data[] = array( 'label' => 'HTML Size', 'data' => $html_bytes );
                $graph_data[] = array( 'label' => 'Total Page Size', 'data' => $page_bytes );
                break;
        }
        echo json_encode( $graph_data );
        die();
    }

    public function reset_callback() {
        if ( check_ajax_referer( 'gfwnonce', 'security' ) ) {


            $args = array(
                'post_type' => 'gfw_report',
                'posts_per_page' => -1
            );

            $query = new WP_Query( $args );

            while ( $query->have_posts() ) {
                $query->next_post();
                wp_delete_post( $query->post->ID );
            }
        }
        die();
    }

    protected function api() {
        $options = get_option( 'gfw_options' );

        if ( ! class_exists( 'Services_WTF_Test' ) ) {
            require_once('lib/Services_WTF_Test.php');
        }
        $api = new Services_WTF_Test();
        $api->api_username( $options['api_username'] );
        $api->api_password( $options['api_key'] );
        $api->user_agent( GFW_USER_AGENT );
        return $api;
    }

    public function credits_meta_box() {
        $api = $this->api();
        $status = get_transient( 'credit_status' );

        if ( false === $status ) {
            $status = $api->status();
            set_transient( 'credit_status', $status, 60 * 2 );
        }

        if ( $api->error() ) {
            $response['error'] = $test->error();
            return $response;
        }
        ?>
        <p style="font-weight:bold">API Credits Remaining: <?php echo esc_html( $status['api_credits'] ); ?></p>
        <p style="font-style:italic">Next top-up: <?php echo $this->wp_date( $status['api_refill'], true ); ?></p>
        <p>Every test costs 1 API credit, except tests that use video, which cost 5 credits. You are topped up to 5 credits per day. If you need more, you can purchase them from GTmetrix.com.</p>      
        <a href="https://gtmetrix.com/pro/<?php echo esc_html( GFW_GA_CAMPAIGN ); ?>" target="_blank" class="button-secondary">Get More API Credits</a>
        <?php
    }

    public function optimization_meta_box() {
        ?>
        <p>Have a look at our WordPress Optimization Guide <a target="_blank" href="https://gtmetrix.com/wordpress-optimization-guide.html">WordPress Optimization Guide</a>.</p>
        <p>You can also <a target="_blank" href="https://gtmetrix.com/contact.html?type=optimization-request">contact us</a> for optimization help and we'll put you in the right direction towards a faster website.</p>
        <?php
    }

    public function news_meta_box() {
        $latest_news = get_transient( 'latest_news' );
        if ( false === $latest_news ) {
            $feed = wp_remote_get( 'https://gtmetrix.com/news.xml' );
            if ( 200 == wp_remote_retrieve_response_code( $feed ) ) {
                $xml = simplexml_load_string( $feed['body'] );
                $latest_news = '';
                if ( '' != $xml ) {
                    for ( $i = 0; $i < 5; $i++ ) {
                        $item = $xml->channel->item[$i];
                        $latest_news .= '<p>' . $item->description . '</a><br /><span class="description">' . $this->wp_date( $item->pubDate, true ) . '</span></p>';
                    }
                }
                set_transient( 'latest_news', '<!-- Updated ' . date( 'r' ) . ' -->' . $latest_news, 60 * 2 );
            } else {
                echo '<p>Sorry, feed temporarily unavailable</p>';
            }
        }
        echo $latest_news;
        echo '<a href="https://twitter.com/gtmetrix" target="_blank" class="button-secondary">Follow us on Twitter</a>';
    }

    protected function front_score( $dashboard = false ) {
        $args = array(
            'post_type' => 'gfw_report',
            'posts_per_page' => 1,
            'orderby' => 'post_date',
            'order' => 'DESC',
            'meta_query' => array(
                array(
                    'key' => 'gfw_url',
                    'value' => array( trailingslashit( GFW_FRONT ), untrailingslashit( GFW_FRONT ) ),
                    'compare' => 'IN'
                ),
                array(
                    'key' => 'gtmetrix_test_id',
                    'value' => 0,
                    'compare' => '!='
                )
            ),
        );

        $query = new WP_Query( $args );

        echo '<input type="hidden" id="gfw-front-url" value="' . esc_html( trailingslashit( GFW_FRONT ) ) . '" />';

        if ( $query->have_posts() ) {

            while ( $query->have_posts() ) {
                $query->next_post();
                $custom_fields = get_post_custom( $query->post->ID );

                $loaded_time = $custom_fields['page_load_time'][0];
                $loaded_time_text = "Onload time";
                if (isset($custom_fields['fully_loaded_time'][0])) {
                    $loaded_time = $custom_fields['fully_loaded_time'][0];
                    $loaded_time_text = "Fully loaded time";
                }

                $pagespeed_grade = $this->score_to_grade( $custom_fields['pagespeed_score'][0] );
                $yslow_grade = $this->score_to_grade( $custom_fields['yslow_score'][0] );
                $expired = true;
                if ( $this->gtmetrix_file_exists( $custom_fields['report_url'][0] . '/screenshot.jpg' ) ) {
                    $expired = false;
                }
                if ( ! $dashboard && ! $expired ) {
                    echo '<img src="' . esc_html( $custom_fields['report_url'][0] ) . '/screenshot.jpg" style="display: inline-block; margin-right: 10px; border-radius: 8px 8px 8px 8px;" />';
                }
                ?>

                <div class="gfw gfw-latest-report-wrapper">
                    <div class="gfw-box gfw-latest-report">
                        <div class="gfw-latest-report-pagespeed gfw-report-grade-<?php echo $pagespeed_grade['grade']; ?>">
                            <span class="gfw-report-grade"><?php echo esc_html( $pagespeed_grade['grade'] ); ?></span>
                            <span class="gfw-report-title">PageSpeed:</span><br>
                            <span class="gfw-report-score">(<?php echo esc_html( $custom_fields['pagespeed_score'][0] ); ?>%)</span>
                        </div>
                        <div class="gfw-latest-report-yslow gfw-report-grade-<?php echo $yslow_grade['grade']; ?>">
                            <span class="gfw-report-grade"><?php echo esc_html( $yslow_grade['grade'] ); ?></span>
                            <span class="gfw-report-title">YSlow:</span><br />
                            <span class="gfw-report-score">(<?php echo esc_html( $custom_fields['yslow_score'][0] ); ?>%)</span>
                        </div>
                        <div class="gfw-latest-report-details">
                            <b><?php echo $loaded_time_text; ?>:</b> <?php echo esc_html( number_format( $loaded_time / 1000, 2 ) ); ?> seconds<br />
                            <b>Total page size:</b> <?php echo esc_html( size_format( $custom_fields['page_bytes'][0], 2 ) ); ?><br />
                            <b>Requests:</b> <?php echo esc_html( $custom_fields['page_elements'][0] ); ?><br />
                        </div>
                    </div>
                    <p>
                        <?php
                        if ( ! $expired ) {
                            echo '<a href="' . esc_html( $custom_fields['report_url'][0] ). '" target="_blank" class="gfw-report-icon">Detailed report</a> &nbsp;&nbsp; ';
                        }
                        ?>
                        <a href="<?php echo esc_html( GFW_SCHEDULE ); ?>&report_id=<?php echo $query->post->ID; ?>" class="gfw-schedule-icon-large">Schedule tests</a></p>
                    <p><a href="<?php echo esc_html( GFW_TESTS ); ?>" class="button-primary" id="gfw-test-front">Re-test your Front Page</a></p>
                </div>
                <?php
            }
        } else {
            echo '<h4>Your Front Page (' . esc_html( GFW_FRONT ) . ') has not been analyzed yet</h4><p>Your front page is set in the <a href="' . get_admin_url() . 'options-general.php">Settings</a> of your WordPress install.</p><p><a href="' . esc_html( GFW_TESTS ) . '" class="button-primary" id="gfw-test-front">Test your Front Page now</a></p>';
        }
    }

    public function score_meta_box() {
        $this->front_score( false );
    }

    public function test_meta_box() {
        $passed_url = isset( $_GET['url'] ) ? esc_html( GFW_FRONT . wp_unslash( $_GET['url'] ) ) : '';
        ?>
        <form method="post" id="gfw-parameters">
            <input type="hidden" name="post_type" value="gfw_report" />
            <div id="gfw-scan" class="gfw-dialog" title="Testing with GTmetrix">
                <div id="gfw-screenshot"><img src="<?php echo esc_html( GFW_URL ) . 'images/scanner.png'; ?>" alt="" id="gfw-scanner" /><div class="gfw-message"></div></div>
            </div>
            <?php
            wp_nonce_field( plugin_basename( __FILE__ ), 'gfwtestnonce' );
            $options = get_option( 'gfw_options' );
            ?>

            <p><input type="text" id="gfw_url" name="gfw_url" value="<?php echo $passed_url; ?>" placeholder="You can enter a URL (eg. http://yourdomain.com), or start typing the title of your page/post" /><br />
                <span class="gfw-placeholder-alternative description">You can enter a URL (eg. http://yourdomain.com), or start typing the title of your page/post</span></p>

            <table class="form-table">
                <tr valign="top">
                    <th scope="row">Label</th>
                    <td><input type="text" id="gfw_label" name="gfw_label" value="" /><br />
                        <span class="description">Optionally enter a label for your report</span></td>
                </tr>
                <tr valign="top">
                    <th scope="row">Locations<a class="gfw-help-icon tooltip" href="#" title="Analyze the performance of the page from one of our several test regions.  Your PageSpeed and YSlow scores usually stay roughly the same, but Page Load times and Waterfall should be different. Use this to see how latency affects your page load times from different parts of the world."></a></th>
                    <td><select name="gfw_location" id="gfw_location">
                            <?php
                            foreach ( $options['locations'] as $location ) {
                                echo '<option value="' . esc_html( $location['id'] ) . '" ' . selected( isset( $options['default_location'] ) ? esc_html( $options['default_location'] ) : esc_html( $location['default'] ), $location['id'], false ) . '>' . $location['name'] . '</option>';
                            }
                            ?>
                        </select><br />
                        <span class="description">Test Server Region</span></td>
                </tr>
                <tr valign="top">
                    <th scope="row"><label for="gfw_adblock">Adblock Plus</label><a class="gfw-help-icon tooltip" href="#" title="Prevent ads from loading using the Adblock Plus plugin.  This can help you assess how ads affect the loading of your site."></a></th>
                    <td><input type="checkbox" name="gfw_adblock" id="gfw_adblock" value="1" <?php checked( isset( $options['default_adblock'] ) ? $options['default_adblock'] : 0, 1 ); ?> /> <span class="description">Block ads with Adblock Plus</span></td>
                </tr>
                <tr valign="top">
                    <th scope="row"><label for="gfw_video">Video</label><a class="gfw-help-icon tooltip" href="#" title="Debug page load issues by seeing exactly how the page loads. View the page load up to 4x slower to help pinpoint rendering or other page load problems."></a></th>
                    <td><input type="checkbox" name="gfw_video" id="gfw_video" value="1" /> <span class="description">Create a video of the page loading (requires 5 api credits)</span></td>
                </tr>
            </table>


            <?php submit_button( 'Test URL now!', 'primary', 'submit', false ); ?>
        </form>
        <?php
    }

    public function schedule_meta_box() {
        $report_id = isset( $_GET['report_id'] ) ? esc_html( wp_unslash( $_GET['report_id'] ) ) : 0;
        $event_id = isset( $_GET['event_id'] ) ? esc_html( wp_unslash( $_GET['event_id'] ) ) : 0;
        $cpt_id = $report_id ? $report_id : $event_id;
        $custom_fields = get_post_custom( $cpt_id );
        $options = get_option( 'gfw_options' );
        $grades = array( 90 => 'A', 80 => 'B', 70 => 'C', 60 => 'D', 50 => 'E', 40 => 'F' );

        if ( empty( $custom_fields ) ) {
            echo '<p>Event not found.</p>';
            return false;
        }
        ?>
        <form method="post">
            <input type="hidden" name="event_id" value="<?php echo esc_html( $event_id ); ?>" />
            <input type="hidden" name="report_id" value="<?php echo esc_html( $report_id ); ?>" />
            <?php wp_nonce_field( plugin_basename( __FILE__ ), 'gfwschedulenonce' ); ?>

            <p><b>URL/label:</b> <?php echo ( $custom_fields['gfw_label'][0] ? esc_html( $custom_fields['gfw_label'][0] ) . ' (' . esc_html( $custom_fields['gfw_url'][0] ) . ')' : esc_html( $custom_fields['gfw_url'][0] ) ); ?></p>
            <p><b>Adblock:</b> <?php echo $custom_fields['gfw_adblock'][0] ? 'On' : 'Off'; ?></p>
            <p><b>Location:</b> Vancouver, Canada <i>(scheduled tests always use the Vancouver, Canada test server region)</i></p>


            <table class="form-table">
                <tr valign="top">
                    <th scope="row">Frequency</th>
                    <td><select name="gfw_recurrence" id="gfw_recurrence">
                            <?php
                            foreach ( array( 'Hourly' => 'hourly', 'Daily' => 'daily', 'Weekly' => 'weekly', 'Monthly' => 'monthly' ) as $name => $recurrence ) {
                                echo '<option value="' . esc_html( $recurrence ) . '" ' . selected( isset( $custom_fields['gfw_recurrence'][0] ) ? esc_html( $custom_fields['gfw_recurrence'][0] ) : 'weekly', $recurrence, false ) . '>' . $name . '</option>';
                            }
                            ?>
                        </select><br />
                        <span class="description">Note: every report will use up 1 of your API credits on GTmetrix.com</span></td>
                </tr>
                <?php
                if ( isset( $custom_fields['gfw_notifications'][0] ) ) {
                    $notifications = unserialize( $custom_fields['gfw_notifications'][0] );
                    $notifications_count = count( $notifications );
                } else {
                    // display a disabled, arbitrary condition if no conditions are already set
                    $notifications = array( 'pagespeed_score' => 90 );
                    $notifications_count = 0;
                }
                ?>
                <tr valign="top">
                    <th scope="row"><label for="gfw-notifications">Enable alerts</label></th>
                    <td><input type="checkbox" id="gfw-notifications" value="1" <?php checked( $notifications_count > 0 ); ?> /><br />
                        <span class="description">If you'd like to be notified by email when poor test results are returned, click Enable alerts above</span></td>
                </tr>

                <?php
                for ( $i = 0; $i < 4; $i++ ) {
                    if ( $notifications ) {
                        $condition_unit = reset( $notifications );
                        $condition_name = key( $notifications );
                        $condition_status = ' style="display: table-row;"';
                        $disabled = '';
                    } else {
                        $condition_unit = false;
                        $condition_name = false;
                        $condition_status = ' style="display: none;"';
                        $disabled = ' disabled="disabled"';
                    }
                    ?>
                    <tr valign="top" class="gfw-conditions gfw-conditions-<?php echo $i; ?>"<?php echo $condition_status; ?>>
                        <th scope="row"><?php echo $i ? 'or' : 'Email admin when'; ?></th>
                        <td><select name="gfw_condition[<?php echo $i; ?>]" class="gfw-condition"<?php echo $disabled; ?>>
                                <?php
                                $conditions = array(
                                    'pagespeed_score' => 'PageSpeed score is less than ',
                                    'yslow_score' => 'YSlow score is less than ',
                                    'page_load_time' => 'Page load time is greater than ',
                                    'page_bytes' => 'Page size is greater than '
                                );
                                foreach ( $conditions as $value => $name ) {
                                    echo '<option value="' . $value . '" ' . selected( $condition_name, $value, false ) . '>' . $name . '</option>';
                                }
                                ?>
                            </select>
                            <select name="pagespeed_score[<?php echo $i; ?>]" class="pagespeed_score gfw-units"<?php echo ( 'pagespeed_score' == $condition_name ? ' style="display: inline;"' : '' ); ?>>
                                <?php
                                foreach ( $grades as $index => $value ) {
                                    echo '<option value="' . esc_html( $index ) . '" ' . selected( $condition_unit, $index, false ) . '>' . esc_html( $value ) . '</option>';
                                }
                                ?>
                            </select>
                            <select name="yslow_score[<?php echo $i; ?>]" class="yslow_score gfw-units"<?php echo ( 'yslow_score' == $condition_name ? ' style="display: inline;"' : '' ); ?>>
                                <?php
                                foreach ( $grades as $index => $value ) {
                                    echo '<option value="' . esc_html( $index ) . '" ' . selected( $condition_unit, $index, false ) . '>' . esc_html( $value ) . '</option>';
                                }
                                ?>
                            </select>
                            <select name="page_load_time[<?php echo $i; ?>]" class="page_load_time gfw-units"<?php echo ( 'page_load_time' == $condition_name ? ' style="display: inline;"' : '' ); ?>>  
                                <?php
                                foreach ( array( 1000 => '1 second', 2000 => '2 seconds', 3000 => '3 seconds', 4000 => '4 seconds', 5000 => '5 seconds' ) as $index => $value ) {
                                    echo '<option value="' . esc_html( $index ) . '" ' . selected( $condition_unit, $index, false ) . '>' . esc_html( $value ) . '</option>';
                                }
                                ?>
                            </select>
                            <select name="page_bytes[<?php echo $i; ?>]" class="page_bytes gfw-units"<?php echo ( 'page_bytes' == $condition_name ? ' style="display: inline;"' : '' ); ?>>
                                <?php
                                foreach ( array( 102400 => '100 KB', 204800 => '200 KB', 307200 => '300 KB', 409600 => '400 KB', 512000 => '500 KB', 1048576 => '1 MB' ) as $index => $value ) {
                                    echo '<option value="' . esc_html( $index ) . '" ' . selected( $condition_unit, $index, false ) . '>' . esc_html( $value ) . '</option>';
                                }
                                ?>
                            </select>
                            <?php echo $i ? '<a href="javascript:void(0)" class="gfw-remove-condition">- Remove</a>' : ''; ?>
                        </td>
                        <?php
                        array_shift( $notifications );
                }
                ?>
                </tr>

                <tr style="display: <?php echo ( $notifications_count && $notifications_count < 4 ? 'table-row' : 'none' ); ?>" id="gfw-add-condition">
                    <th scope="row">&nbsp;</th>
                    <td><a href="javascript:void(0)">+ Add a condition</a></td>
                </tr>

                <tr valign="top">
                    <th scope="row">Status</th>
                    <td><select name="gfw_status" id="gfw_status">
                            <?php
                            foreach ( array( 1 => 'Active', 2 => 'Paused', 3 => 'Paused due to recurring failures' ) as $key => $status ) {
                                echo '<option value="' . $key . '" ' . selected( isset( $custom_fields['gfw_status'][0] ) ? $custom_fields['gfw_status'][0] : 1, $key, false ) . '>' . $status . '</option>';
                            }
                            ?>
                        </select></td>
                </tr>

            </table>
            <?php
            submit_button( 'Save', 'primary', 'submit', false );
            echo '</form>';
    }

    public function reports_list() {
        $args = array(
            'post_type' => 'gfw_report',
            'posts_per_page' => -1,
            'meta_key' => 'gfw_event_id',
            'meta_value' => 0
        );
        $query = new WP_Query( $args );
        $no_posts = ! $query->post_count;
        ?>
        <p>Click a report to see more detail, or to schedule future tests.</p>
        <div class="gfw-table-wrapper">
            <table class="gfw-table">
                <thead>
                    <tr style="display: <?php echo $no_posts ? 'none' : 'table-row'; ?>">
                        <th class="gfw-reports-url">Label/URL</th>
                        <th class="gfw-reports-load-time">Page Load</th>
                        <th class="gfw-reports-pagespeed">PageSpeed</th>
                        <th class="gfw-reports-yslow">YSlow</th>
                        <th class="gfw-reports-last">Date</th>
                        <th class="gfw-reports-delete"></th>
                    </tr>
                </thead>
                <tbody>
                    <?php
                    $row_number = 0;
                    while ( $query->have_posts() ) {
                        $query->next_post();
                        $custom_fields = get_post_custom( $query->post->ID );
                        foreach ( $custom_fields as $name => $value ) {
                            $$name = $value[0];
                        }

                        if ( ! isset( $gtmetrix_error ) ) {
                            $pagespeed_grade = $this->score_to_grade( $pagespeed_score );
                            $yslow_grade = $this->score_to_grade( $yslow_score );
                        }
                        $report_date = $this->wp_date( $query->post->post_date, true );
                        $title = $gfw_label ? $gfw_label : $this->append_http( $gfw_url );

                        echo '<tr class="' . ( $row_number++ % 2 ? 'even' : 'odd' ) . '" id="post-' . esc_html( $query->post->ID ) . '">';

                        if ( isset( $gtmetrix_error ) ) {
                            echo '<td data-th="Error" class="gfw-reports-url">' . esc_html( $title ) . '</td>';
                            echo '<td data-th="Message" class="reports-error" colspan="3">' . esc_html( $this->translate_message( $gtmetrix_error ) ) . '</td>';
                            echo '<td data-th="Date">' . esc_html( $report_date ) . '</td>';
                        } else {
                            echo '<td data-th="Label/URL" title="Click to expand/collapse" class="gfw-reports-url gfw-toggle tooltip">' . esc_html( $title ) . '</td>';
                            echo '<td data-th="Page Load" class="gfw-toggle">' . esc_html( number_format( $page_load_time / 1000, 2 ) ) . 's</td>';
                            echo '<td data-th="PageSpeed" class="gfw-toggle gfw-reports-pagespeed"><div class="gfw-grade-meter gfw-grade-meter-' . esc_html( $pagespeed_grade['grade'] ) . '"><span class="gfw-grade-meter-text">' . esc_html( $pagespeed_grade['grade'] ) . ' (' . esc_html( $pagespeed_score ) . ')</span><span class="gfw-grade-meter-bar" style="width: ' . esc_html( $pagespeed_score ) . '%"></span></div></td>';
                            echo '<td data-th="YSlow" class="gfw-toggle gfw-reports-yslow"><div class="gfw-grade-meter gfw-grade-meter-' . esc_html( $yslow_grade['grade'] ) . '"><span class="gfw-grade-meter-text">' . esc_html( $yslow_grade['grade'] ) . ' (' . esc_html( $yslow_score ) . ')</span><span class="gfw-grade-meter-bar" style="width: ' . esc_html( $yslow_score ) . '%"></span></div></td>';   
                            echo '<td data-th="Date" class="gfw-toggle" title="' . esc_html( $report_date ) . '">' . esc_html( $report_date ) . '</td>';
                        }
                        echo '<td class="gfw-action-icons"><a href="' . esc_html( GFW_SCHEDULE ) . '&report_id=' . $query->post->ID . '" class="gfw-schedule-icon-small tooltip" title="Schedule tests">Schedule test</a> <a href="#" data-action="delete_report" data-entity-id="' . $query->post->ID . '" rel="#gfw-confirm-delete" class="gfw-delete-icon delete-report tooltip" title="Delete Report">Delete Report</a></td>';
                        echo '</tr>';
                    }
                    ?>
                </tbody>
            </table>
            <?php
            if ( $no_posts ) {
                echo '<p class="gfw-no-posts">You have no reports yet</p>';
            }
            ?>
        </div>
        <?php
    }

    public function events_list() {

        $args = array(
            'post_type' => 'gfw_event',
            'posts_per_page' => -1,
            'meta_key' => 'gfw_recurrence'
        );
        $query = new WP_Query( $args );
        $no_posts = ! $query->post_count;
        ?>

        <div id="gfw-graph" class="gfw-dialog" title="">
            <div id="gfw-flot-placeholder"></div>
            <div class="graph-legend" id="gfw-graph-legend"></div>
        </div>

        <div class="gfw-table-wrapper">
            <table class="gfw-table events">
                <thead>
                    <tr style="display: <?php echo $no_posts ? 'none' : 'table-row' ?>">
                        <th>Label/URL</th>
                        <th>Frequency</th>
                        <th>Alerts</th>
                        <th>Last Report</th>
                        <th>Next Report</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    <?php
                    $row_no = 0;
                    $next_report['hourly'] = wp_next_scheduled( 'gfw_hourly_event', array( 'hourly' ) );
                    $next_report['daily'] = wp_next_scheduled( 'gfw_daily_event', array( 'daily' ) );
                    $next_report['weekly'] = wp_next_scheduled( 'gfw_weekly_event', array( 'weekly' ) );
                    $next_report['monthly'] = wp_next_scheduled( 'gfw_monthly_event', array( 'monthly' ) );

                    while ( $query->have_posts() ) {
                        $query->next_post();

                        $custom_fields = get_post_custom( $query->post->ID );
                        if ( $custom_fields['gfw_event_error'][0] ) {
                            $gtmetrix_error = get_post_meta( $custom_fields['gfw_last_report_id'][0], 'gtmetrix_error', true );
                        }
                        $last_report = isset( $custom_fields['gfw_last_report'][0] ) ? $this->wp_date( $custom_fields['gfw_last_report'][0], true ) : 'Pending';

                        $title = $custom_fields['gfw_label'][0] ? $custom_fields['gfw_label'][0] : $custom_fields['gfw_url'][0];
                        $row = '<tr class="' . ( $row_no % 2 ? 'even' : 'odd' ) . '" id="post-' . $query->post->ID . '">';
                        $toggle_title = ' title="Click to expand/collapse" ';
                        $toggle_class = 'gfw-toggle tooltip';
                        if ( isset( $gtmetrix_error ) ) {
                            $toggle_title = '';
                            $toggle_class = '';
                        }

                        $row .= '<td class="' . $toggle_class . ' gfw-reports-url"' . $toggle_title . '>' . esc_html( $title ) . '</td>';
                        $row .= '<td class="' . $toggle_class . '"' . $toggle_title . '>' . esc_html( ucwords( $custom_fields['gfw_recurrence'][0] ) ) . '</div></td>';
                        $row .= '<td class="' . $toggle_class . '"' . $toggle_title . '>' . ( isset( $custom_fields['gfw_notifications'][0] ) ? 'Enabled' : 'Disabled' ) . '</div></td>';
                        $row .= '<td class="' . $toggle_class . '"' . $toggle_title . '>' . esc_html( $last_report ) . ( $custom_fields['gfw_event_error'][0] ? ' <span class="gfw-failed tooltip" title="' . esc_html( $gtmetrix_error ) . '">(failed)</span>' : '' ) . '</td>';
                        $row .= '<td class="' . $toggle_class . '"' . $toggle_title . '>' . esc_html( $this->wp_date( $next_report[$custom_fields['gfw_recurrence'][0]], true ) ) . '</td>';
                        $row .= '<td><a href="' . esc_html( GFW_SCHEDULE ) . '&event_id=' . $query->post->ID . '" rel="" class="gfw-edit-icon tooltip" title="Edit this event">Edit</a> <a href="#" data-action="delete_event" data-entity-id="' . $query->post->ID . '" rel="#gfw-confirm-delete" title="Delete this event" class="gfw-delete-icon delete-event tooltip">Delete Event</a> <a href="#" data-action="pause_event" rel="#gfw-pause" data-entity-id="' . $query->post->ID . '" class="tooltip gfw-pause-icon' . ( 1 == $custom_fields['gfw_status'][0] ? '" title="Pause this event">Pause Event' : ' paused" title="Reactivate this event">Reactivate Event' ) . '</a></td>';
                        $row .= '</tr>';
                        echo $row;
                        $row_no++;
                    }
                    ?>
                </tbody>
            </table>

            <?php
            if ( $no_posts ) {
                echo '<p class="gfw-no-posts">You have no Scheduled Tests. Go to <a href="' . esc_html( GFW_TESTS ) . '">Tests</a> to create one.</p>';
            }
            ?>

        </div>

        <div id="gfw-confirm-delete" class="gfw-dialog" title="Delete this event?">
            <p>Are you sure you want to delete this event?</p>
            <p>This will delete all the reports generated so far by this event.</p>
        </div>


        <?php
    }

    protected function translate_message( $message ) {
        if ( 0 === stripos( $message, 'Maximum number of API calls reached.' ) ) {
            $message .= ' or <a href="https://gtmetrix.com/pro/' . esc_html( GFW_GA_CAMPAIGN ) . '" target="_blank" title="Go Pro">go Pro</a> to receive bigger daily top-ups and other benefits.';      
        }
        return $message;
    }

    public function authenticate_meta_box() {
        if ( ! GFW_AUTHORIZED ) {
            echo '<p style="font-weight:bold">You must have an API key to use this plugin.</p><p>To get an API key, register for a FREE account at gtmetrix.com and generate one in the API section.</p><p><a href="https://gtmetrix.com/api/' . esc_html( GFW_GA_CAMPAIGN ) . '" target="_blank">Register for a GTmetrix account now &raquo;</a></p>';
        }
        echo '<table class="form-table">';
        do_settings_fields( 'gfw_settings', 'authentication_section' );
        echo '</table>';
    }

    public function options_meta_box() {
        echo '<table class="form-table">';
        do_settings_fields( 'gfw_settings', 'options_section' );
        echo '</table>';
    }

    public function widget_meta_box() {
        echo '<table class="form-table">';
        do_settings_fields( 'gfw_settings', 'widget_section' );
        echo '</table>';
    }

    public function reset_meta_box() {
        echo '<table class="form-table">';
        do_settings_fields( 'gfw_settings', 'reset_section' );
        echo '</table>';
    }

    protected function score_to_grade( $score ) {
        $grade = array();
        if ( 100 == $score ) {
            $grade['grade'] = 'A';
        } elseif ( $score < 50 ) {
            $grade['grade'] = 'F';
        } else {
            $grade['grade'] = '&#' . ( 74 - floor( $score / 10 ) ) . ';';
        }
        return $grade;
    }

    protected function gtmetrix_file_exists( $url ) {
        $options = get_option( 'gfw_options' );
        $ch = curl_init();
        curl_setopt( $ch, CURLOPT_URL, $url );
        curl_setopt( $ch, CURLOPT_RETURNTRANSFER, true );
        curl_setopt( $ch, CURLOPT_SSL_VERIFYPEER, false );
        curl_setopt( $ch, CURLOPT_NOBODY, true );
        if ( curl_exec( $ch ) !== false ) {
            $curl_info = curl_getinfo( $ch );
            if ( 200 == $curl_info['http_code'] ) {
                return true;
            }
            return false;
        } else {
            echo esc_html( curl_error( $ch ) );
            return false;
        }
    }

    protected function append_http( $url ) {
        $url = htmlspecialchars( $url );
        if ( stripos( $url, 'http' ) === 0 || ! $url ) {
            return $url;
        } else {
            return 'http://' . $url;
        }
    }

    protected function wp_date( $date_time, $time = false ) {
        date_default_timezone_set( GFW_TIMEZONE );
        $local_date_time = date( get_option( 'date_format' ) . ( $time ? ' ' . get_option( 'time_format' ) : '' ), ( is_numeric( $date_time ) ? $date_time : strtotime( $date_time ) ) );
        return esc_html( $local_date_time );
    }

    public function gfw_widget_init() {
        if ( GFW_AUTHORIZED ) {
            register_widget( 'GFW_Widget' );
        }
    }

}

$gfw = new GTmetrix_For_WordPress();
